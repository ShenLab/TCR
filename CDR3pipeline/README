# TCRtool is a pipeline for processing a fastq to identify V, J cassettes and CDR3 region.
# Note: A test fastq file (testsample.fastq) is provided alone with this pipeline.

Environment requirements:
Python compiler
Perl compiler
Awk compiler GNU version
SAMTOOLS pre-installed:
	http://samtools.sourceforge.net/
BWA pre-installed:
	http://bio-bwa.sourceforge.net/


Before Running:
$chmod +x ./bash/*
$chmod +x ./TCRtool.sh
To set all the bash coding executable.


Running method:
usage: ./TCRtool <sample file> <reference genome> -options
options:
         -o   Output directory.
              [default]./TCRoutput
         -C   The DNA chain needed to be analysed. Can be 'A', 'B' or 'both'.
              [default]both
         -B   BWA executable's path.
              [default]BWA
         -S   samtools executable's path.
              [default]samtools
         -A   awk GNU version executable's path.
              [default]awk

example: ./TCRtool ./testsample.fastq ./referencegenome -o ./TCRoutput -C both -B BWA -S samtools -A awk


Implementation Steps:
1)(optional) Split fastq file into pieces for quicker analysis:
	Run splitfastqs.sh to split the file into parts

        Commandline:
		./splitfastaqs.sh <sample> <indir> <outdir>
	Inputs:
		sample: sample name
		indir: directory containing sample
		outdir: directory to put the output

2) Map using bwa:
	Run bwajob.sh

	Commandline:
		./bwajob.sh <filename> <datadir> <fastaref> <outdir> <bwa> <samtools>

	Inputs:
		filename: sample's filename
		datadir: directory containing split sample files
		fastaref: path to the fasta reference (see comments in file)
		outdir: directory to put the output
		bwa: the address of bwa executable
		samtools: the address of samtools executable
	Requires, as provided:
		bash:
		 bwa_job.sh
		Tools, need for preinstalled:
		 bwa
		 samtools

3) Run identification pipeline: 
	Run pipeline.sh

	Commandline:
		./pipeline.sh <filename> <datadir> <outdir> <chain> <samtools>

	Inputs:
		filename: sample's filename
		datadir: directory containing bams
		outdir: directory to place the output
		chain: which chain to analyze (A or B)
		samtools: the address of samtools executable

	Requires, as provided:
		bash:
		 doTRA.sh
		 doTRB.sh
		code:
		 ReadSam.CDR3.TRA.pl, ReadSam.CDR3.TRB.pl 
		 ReadCDR3.VJ.TRA.pl, ReadCDR3.VJ.TRB.pl
		 CategorizeCDR3.TRA.pl, CategorizeCDR3.TRB.pl
		files:
		 TRA.v37.YapingCoordinates_VDJonly3.txt, TRAV.ref.IGMT.motif2.txt, TRAJ.ref.IGMT.motif3.txt
		 TRB.v37p8.YapingCoordinates2.txt, TRBV.ref.IGMT.motif2.txt, TRBJ.ref.IGMT.motif2.txt

	Depending on input to chain variable, this script runs either:
		doTRA.sh (Finds A chain CDR3) -> Requires TRA.v37.YapingCoordinates_VDJonly3.txt, TRAV.ref.IGMT.motif2.txt, TRAJ.ref.IGMT.motif3.txt
		doTRB.sh (Finds B chain CDR3) -> Requires TRB.v37p8.YapingCoordinates2.txt, TRBV.ref.IGMT.motif2.txt, TRBJ.ref.IGMT.motif2.txt
	These run a series of perl scripts and use included reference files listed above in order to perform the analysis.	

4) Process output into a final table.
	Run processCDR3.sh

	Commandline:
		./processCDR3.sh <filename> <datadir> <outdir> <chain> <awk>
	
	Inputs:
		filename: sample's filename
               	datadir: directory containing bams
               	outdir: directory to place the output
               	chain: which chain to analyze (A or B)

	Requires,as provided:
		bash:
		 processCDR3s_job.sh
		code:
	  	 fixNts.py
	  	 merge.awk
		files:
		 humanA.Jmotif, humanB.Jmotif
		 codonmap.txt 


Notes: 
With the exception of the reference genome and items specified in running environments, all necessary files are contained in the CDR3pipeline directory.

